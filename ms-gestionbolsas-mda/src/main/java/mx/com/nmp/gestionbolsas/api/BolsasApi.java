/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package mx.com.nmp.gestionbolsas.api;

import mx.com.nmp.gestionbolsas.model.BadRequest;
import mx.com.nmp.gestionbolsas.model.Bolsa;
import mx.com.nmp.gestionbolsas.model.GeneralResponse;
import mx.com.nmp.gestionbolsas.model.InternalServerError;
import mx.com.nmp.gestionbolsas.model.InvalidAuthentication;
import mx.com.nmp.gestionbolsas.model.ListaBolsas;
import mx.com.nmp.gestionbolsas.model.ListaTipoBolsas;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-02-21T17:43:22.226Z")

@Api(value = "bolsas", description = "the bolsas API")
public interface BolsasApi {

    @ApiOperation(value = "Obtener la lista de bolsas configuradas", nickname = "bolsasGet", notes = "Obtener la lista de bolsas configuradas por el usuario mediante los parámetros:   * Id Tipo Bolsa   * Nombre de la Bolsa   * Ramo   * Subramo   * Factor ### Seguridad Para poder realizar el consumo del recuros deberá de estar autorizado. Para esto tiene que enviar la llave en el encabezado HTTP: * 'X-API-KEY: eyJ4NXQjUzI1NiI6IkFTS1ESG42` ", response = ListaBolsas.class, authorizations = {
        @Authorization(value = "apiKey")
    }, tags={"Bolsas" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Consulta de Bolsas Exitosa", response = ListaBolsas.class),
        @ApiResponse(code = 400, message = "Error en el mensaje de petición, verifique la información", response = BadRequest.class),
        @ApiResponse(code = 401, message = "Error de autorización en el uso del recurso", response = InvalidAuthentication.class),
        @ApiResponse(code = 500, message = "Error interno del servidor", response = InternalServerError.class) })
    @RequestMapping(value = "/bolsas",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
     ResponseEntity<?> bolsasGet(@ApiParam(value = "Usuario de sistema que lanza la petición" ,required=true) @RequestHeader(value="usuario", required=true) String usuario,@ApiParam(value = " Identificador del tipo de bolsa a buscar") @Valid @RequestParam(value = "idTipo", required = false) String idTipo,@ApiParam(value = "Nombre de la Bolsa") @Valid @RequestParam(value = "nombre", required = false) String nombre,@ApiParam(value = "Ramo configurado en la Bolsa") @Valid @RequestParam(value = "ramo", required = false) String ramo,@ApiParam(value = "Subramo configurado en la Bolsa") @Valid @RequestParam(value = "subramo", required = false) String subramo,@ApiParam(value = "Factor configurado en la Bolsa") @Valid @RequestParam(value = "factor", required = false) String factor,@Valid @RequestParam(value = "origen", required = false) String origen,@Valid @RequestParam(value = "categoria", required = false) String categoria);
        
    


    @ApiOperation(value = "Eliminar una Bolsa", nickname = "bolsasIdBolsaDelete", notes = "Elimina la configuración de una bolsa mediante el identificador de esta ### Seguridad Para poder realizar el consumo del recuros deberá de estar autorizado. Para esto tiene que enviar la llave en el encabezado HTTP: * 'X-API-KEY: eyJ4NXQjUzI1NiI6IkFTS1ESG42` ", response = GeneralResponse.class, authorizations = {
        @Authorization(value = "apiKey")
    }, tags={ "Bolsas" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Eliminación exitosa", response = GeneralResponse.class),
        @ApiResponse(code = 400, message = "Error en el mensaje de petición, verifique la información", response = BadRequest.class),
        @ApiResponse(code = 401, message = "Error de autorización en el uso del recurso", response = InvalidAuthentication.class),
        @ApiResponse(code = 500, message = "Error interno del servidor", response = InternalServerError.class) })
    @RequestMapping(value = "/bolsas/{idBolsa}", produces = { "application/json" }, method = RequestMethod.DELETE)
     ResponseEntity<?> bolsasIdBolsaDelete(@ApiParam(value = "Usuario de sistema que lanza la petición" ,required=true) @RequestHeader(value="usuario", required=true) String usuario,@ApiParam(value = "Identificador de la Bolsa a eliminar",required=true) @PathVariable("idBolsa") Integer idBolsa);
    


    @ApiOperation(value = "Actualizar la configuración de una Bolsa", nickname = "bolsasPatch", notes = "Actualizar la configuración de una Bolsa ### Seguridad Para poder realizar el consumo del recuros deberá de estar autorizado. Para esto tiene que enviar la llave en el encabezado HTTP: * 'X-API-KEY: eyJ4NXQjUzI1NiI6IkFTS1ESG42` ", response = GeneralResponse.class, authorizations = {
        @Authorization(value = "apiKey")
    }, tags={"Bolsas" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Modificación exitosa", response = GeneralResponse.class),
        @ApiResponse(code = 400, message = "Error en el mensaje de petición, verifique la información", response = BadRequest.class),
        @ApiResponse(code = 401, message = "Error de autorización en el uso del recurso", response = InvalidAuthentication.class),
        @ApiResponse(code = 500, message = "Error interno del servidor", response = InternalServerError.class) })
    @RequestMapping(value = "/bolsas",
        produces = { "application/json" }, 
        method = RequestMethod.PATCH)
    ResponseEntity<?> bolsasPatch(@ApiParam(value = "Usuario de sistema que lanza la petición" ,required=true) @RequestHeader(value="usuario", required=true) String usuario,@ApiParam(value = "Cuerpo de la petición" ,required=true )  @Valid @RequestBody Bolsa peticion);
   
    


    @ApiOperation(value = "Almacenar una bolsa de sucursales", nickname = "bolsasPost", notes = "Almacena una bolsa de sucurales, con esto podrá ser utilizada dentro de la configuración de reglas ### Seguridad Para poder realizar el consumo del recuros deberá de estar autorizado. Para esto tiene que enviar la llave en el encabezado HTTP: * 'X-API-KEY: eyJ4NXQjUzI1NiI6IkFTS1ESG42` ", response = GeneralResponse.class, authorizations = {
        @Authorization(value = "apiKey")
    }, tags={"Bolsas"})
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Alta exitosa", response = GeneralResponse.class),
        @ApiResponse(code = 400, message = "Error en el mensaje de petición, verifique la información", response = BadRequest.class),
        @ApiResponse(code = 401, message = "Error de autorización en el uso del recurso", response = InvalidAuthentication.class),
        @ApiResponse(code = 500, message = "Error interno del servidor", response = InternalServerError.class) })
    @RequestMapping(value = "/bolsas",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<?> bolsasPost(@ApiParam(value = "Usuario de sistema que lanza la petición" ,required=true) @RequestHeader(value="usuario", required=true) String usuario,@ApiParam(value = "Cuerpo de la petición" ,required=true )  @Valid @RequestBody Bolsa peticion);
    


    @ApiOperation(value = "Obtener los tipos de bolsas", nickname = "bolsasTiposGet", notes = "Obtener la lista de tipos de bolsas almacenadas en Mongo. ### Seguridad Para poder realizar el consumo del recuros deberá de estar autorizado. Para esto tiene que enviar la llave en el encabezado HTTP: * 'X-API-KEY: eyJ4NXQjUzI1NiI6IkFTS1ESG42` ", response = ListaTipoBolsas.class, authorizations = {
        @Authorization(value = "apiKey")
    }, tags={"Bolsas"})
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Consulta de tipos de bolsas exitosa", response = ListaTipoBolsas.class),
        @ApiResponse(code = 400, message = "Error en el mensaje de petición, verifique la información", response = BadRequest.class),
        @ApiResponse(code = 401, message = "Error de autorización en el uso del recurso", response = InvalidAuthentication.class),
        @ApiResponse(code = 500, message = "Error interno del servidor", response = InternalServerError.class) })
    @RequestMapping(value = "/bolsas/tipos", produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> bolsasTiposGet(
    		@ApiParam(value = "Usuario de sistema que lanza la petición" ,required=true) @RequestHeader(value="usuario", required=true) String usuario);
        
    

}


